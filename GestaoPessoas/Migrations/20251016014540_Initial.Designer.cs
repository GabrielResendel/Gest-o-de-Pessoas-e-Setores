// <auto-generated />
using System;
using GestaoPessoas.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestaoPessoas.Migrations
{
    [DbContext(typeof(GestaoPessoasContext))]
    [Migration("20251016014540_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestaoPessoas.Models.Desempenho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<int?>("MetaId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("PontuacaoObtida")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("MetaId");

                    b.ToTable("Desempenhos");
                });

            modelBuilder.Entity("GestaoPessoas.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DataAdmissao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("Salario")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("SetorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SetorId");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("GestaoPessoas.Models.Meta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PontuacaoMaxima")
                        .HasColumnType("int");

                    b.Property<int>("SetorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SetorId");

                    b.ToTable("Metas");
                });

            modelBuilder.Entity("GestaoPessoas.Models.Setor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CapacidadeMaximaPessoas")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Setores");
                });

            modelBuilder.Entity("GestaoPessoas.Models.Desempenho", b =>
                {
                    b.HasOne("GestaoPessoas.Models.Funcionario", "Funcionario")
                        .WithMany("Desempenhos")
                        .HasForeignKey("FuncionarioId")
                        .IsRequired();

                    b.HasOne("GestaoPessoas.Models.Meta", "Meta")
                        .WithMany("Desempenhos")
                        .HasForeignKey("MetaId")
                        .IsRequired();

                    b.Navigation("Funcionario");

                    b.Navigation("Meta");
                });

            modelBuilder.Entity("GestaoPessoas.Models.Funcionario", b =>
                {
                    b.HasOne("GestaoPessoas.Models.Setor", "Setor")
                        .WithMany("Funcionarios")
                        .HasForeignKey("SetorId")
                        .IsRequired();

                    b.Navigation("Setor");
                });

            modelBuilder.Entity("GestaoPessoas.Models.Meta", b =>
                {
                    b.HasOne("GestaoPessoas.Models.Setor", "Setor")
                        .WithMany("Metas")
                        .HasForeignKey("SetorId")
                        .IsRequired();

                    b.Navigation("Setor");
                });

            modelBuilder.Entity("GestaoPessoas.Models.Funcionario", b =>
                {
                    b.Navigation("Desempenhos");
                });

            modelBuilder.Entity("GestaoPessoas.Models.Meta", b =>
                {
                    b.Navigation("Desempenhos");
                });

            modelBuilder.Entity("GestaoPessoas.Models.Setor", b =>
                {
                    b.Navigation("Funcionarios");

                    b.Navigation("Metas");
                });
#pragma warning restore 612, 618
        }
    }
}
